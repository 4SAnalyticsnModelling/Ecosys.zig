const std = @import("std");
const config = @import("config");
const jx = config.ewgridsmax;
const jy = config.nsgridsmax;
const jz = config.soillayersmax;

pub const Blktrnsfr5 = struct {
    rcodfg: [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    rchdfg: [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    roxdfg: [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    rngdfg: [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    rn2dfg: [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    rn3dfg: [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    rnbdfg: [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    tqroc: [jx][jy][5]f32 = std.mem.zeroes([jx][jy][5]f32),
    tqron: [jx][jy][5]f32 = std.mem.zeroes([jx][jy][5]f32),
    tqrop: [jx][jy][5]f32 = std.mem.zeroes([jx][jy][5]f32),
    tqroa: [jx][jy][5]f32 = std.mem.zeroes([jx][jy][5]f32),
    tqrchs: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqroxs: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrngs: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrn2s: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrnh4: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrnh3: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrno3: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrh2p: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrno2: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrhgs: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqscos: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqrcos: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqschs: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsoxs: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsngs: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsn2s: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsnh4: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsnh3: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsno3: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsh1p: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tqsh2p: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tocfls: [jx][jy][jz + 1][5]f32 = std.mem.zeroes([jx][jy][jz + 1][5]f32),
    tonfls: [jx][jy][jz + 1][5]f32 = std.mem.zeroes([jx][jy][jz + 1][5]f32),
    topfls: [jx][jy][jz + 1][5]f32 = std.mem.zeroes([jx][jy][jz + 1][5]f32),
    toafls: [jx][jy][jz + 1][5]f32 = std.mem.zeroes([jx][jy][jz + 1][5]f32),
    tcofls: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tchfls: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    toxfls: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tngfls: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tn2fls: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tn4flw: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tn3flw: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tnoflw: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    th2pfs: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tn4flb: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tn3flb: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tnoflb: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    th2bfb: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tnxfls: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tcoflg: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tchflg: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    toxflg: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tngflg: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tn2flg: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tqrh1p: [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    th1pfs: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    th1bfb: [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),

    pub fn init() Blktrnsfr5 {
        return .{};
    }
};
