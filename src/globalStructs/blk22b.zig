const std = @import("std");

pub const Blk22b = struct {
    rc2pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rm1pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh0bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh3bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rf1bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rf2bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rc0bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rc1bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rc2bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rm1bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    xcobls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xchbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xoxbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xngbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xn2bls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xn4blw: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xn3blw: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xnoblw: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xh1pbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xh2pbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xalbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xfebls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xhybls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xcabls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xmgbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xnabls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xkabls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xohbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xsobls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xclbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xc3bls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xhcbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xal1bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xal2bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xal3bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xal4bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xalsbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xfe1bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xfe2bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xfe3bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xfe4bs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xfesbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xcaobs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xcacbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xcahbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xcasbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xmgobs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xmgcbs: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),
    xhgbls: comptime [jx][jy][js]f32 = std.mem.zeroes([jx][jy][js]f32),

    pub fn init() Blk22b {
        return .{};
    }
};
