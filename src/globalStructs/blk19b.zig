const std = @import("std");

pub const Blk19b = struct {
    xoh1b: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    xoh2b: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    xh1pb: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    xh2pb: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    paloh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    pfeoh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    pcaco: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    pcasc: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    palpo: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    pfepo: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    pcapd: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    pcaph: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    pcapm: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    palpb: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    pfepb: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    pcpdb: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    pcpmb: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    ecnd: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    cstr: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    cion: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    xcec: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    xaec: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    alsgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    fesgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    hysgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    casgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    gmsgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ansgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    aksgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ohsgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    c3sgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    hcsgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    sosgl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    clsxl: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zalh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zfeh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zhyh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zcch: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zmah: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    znah: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zkah: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zohh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zso4h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zclh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zco3h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zhco3h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zalo1h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zalo2h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zalo3h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zalo4h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zalsh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zfeo1h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zfeo2h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zfeo3h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zfeo4h: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zfesh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zcaoh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zcach: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zcahh: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    zcash: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    pcphb: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),

    pub fn init() Blk19b {
        return .{};
    }
};
