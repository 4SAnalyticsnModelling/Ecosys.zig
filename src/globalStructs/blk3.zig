const std = @import("std");

pub const Blk3 = struct {
    group: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    gstgi: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    psilz: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    vstg: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    vstgx: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    dgstgi: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    dgstgf: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    pstg: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    pstgi: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    gstgf: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    pstgf: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    tgstgi: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    tgstgf: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    flg4: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    vrns: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    vrnf: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    atrp: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    flgz: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    vrny: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    vrnz: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    nbr: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    nb1: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    nrt: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    kvstgn: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    iday: comptime [jx][jy][jp][jc][10]i32 = std.mem.zeroes([jx][jy][jp][jc][10]i32),
    nbt: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    nbtb: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    ninr: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    kleaf: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    idthr: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    iflgr: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    iflgq: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    iflgg: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    idthp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    kvstg: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    idthb: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    nix: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    ni: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    ng: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    iflgp: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    iflga: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    iflge: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    iflgf: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),
    kleafx: comptime [jx][jy][jp][jc]i32 = std.mem.zeroes([jx][jy][jp][jc]i32),

    pub fn init() Blk3 {
        return .{};
    }
};
