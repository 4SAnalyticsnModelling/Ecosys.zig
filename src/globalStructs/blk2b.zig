const std = @import("std");

pub const Blk2b = struct {
    phr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cn4ri: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cnori: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cn4r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cn3r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cnor: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cpor: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    calr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cfer: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    chyr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ccar: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cmgr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cnar: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ckar: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cohr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    csor: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cclr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cc3r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    chcr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cchr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cal1r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cal2r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cal3r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cal4r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    calsr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cfe1r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cfe2r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cfe3r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cfe4r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ccesr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ccaor: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ccacr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ccahr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ccasr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cmgor: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cmgcr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cmghr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cmgsr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cnacr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cnasr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ckasr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ch0pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ch1pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ch3pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cf1pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cf2pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cc0pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cc1pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cc2pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cm1pr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    ccor: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    coxr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cnnr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cn2r: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    phq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cn4q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cn3q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cnoq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cpoq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    calq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cfeq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    chyq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    ccaq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cmgq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cnaq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    ckaq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cohq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    csoq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cclq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cc3q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    chcq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cal1q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cal2q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cal3q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cal4q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    calsq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cfe1q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cfe2q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cfe3q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cfe4q: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    ccesq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    cstrq: comptime [jx][jy][366]f32 = std.mem.zeroes([jx][jy][366]f32),
    dens0: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    cstrr: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),

    pub fn init() Blk2b {
        return .{};
    }
};
