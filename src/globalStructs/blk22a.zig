const std = @import("std");

pub const Blk22a = struct {
    flu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    hwflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rcoflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rchflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    roxflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rngflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rn2flu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rn4flu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rn3flu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rnoflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh2pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rn4fbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rn3fbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rnofbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh2bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ralflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rfeflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rhyflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rcaflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rmgflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rnaflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rkaflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rohflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rsoflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rclflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rc3flu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rhcflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ral1fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ral2fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ral3fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ral4fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    ralsfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rfe1fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rfe2fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rfe3fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rfe4fu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rfesfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rcaofu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rcacfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rcahfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rcasfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rmgoffu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rmgcfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rmghfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rmgsfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rnacfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rnasfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rkafu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh0pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh1pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh3pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rf1pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rf2pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rc0pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rc1pfu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rhgflu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    rh1bbu: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),

    pub fn init() Blk22a {
        return .{};
    }
};
