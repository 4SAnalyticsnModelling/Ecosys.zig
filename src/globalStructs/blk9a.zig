const std = @import("std");

pub const Blk9a = struct {
    vcmx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    vomx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    vcmx4: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xkco2: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xko2: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xkco24: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    rubp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    pepc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    etmx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    chl: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    chl4: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xrni: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xrla: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    ctc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    fco2: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wdlf: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    pb: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    sla1: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    ssl1: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    snl1: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    vrnl: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    htc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    sstx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    fnod: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmlf: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmshe: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmstk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmrs: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmhs: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmea: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmgr: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmrt: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmnd: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    rsmx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    rcmx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    rsmh: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnlf: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnshe: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnstk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnrsv: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnhsk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnear: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cngr: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnrt: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cnnd: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cplf: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cpshe: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cpstk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cprsv: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cphsk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cpear: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cpgr: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cprt: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cpnd: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    class4: comptime [jx][jy][jp][4]f32 = std.mem.zeroes([jx][jy][jp][4]f32),
    cf: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xdl: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xppd: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cfi: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xtli: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    osmo: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    rcs: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    stmx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    sdmx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    grmx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    ppz: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    grdm: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    gfill: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    sdpthi: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    vrnx: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    cfx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),

    pub fn init() Blk9a {
        return .{};
    }
};
