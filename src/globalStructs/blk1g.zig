const std = @import("std");

pub const Blk1g = struct {
    o2i: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    co2i: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dco2: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    co2q: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    co2l: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    o2l: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    sco2: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    so2: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xkco2l: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    xkco2o: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    tfn3: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    tfn4: comptime [jx][jy][jp][jz]f32 = std.mem.zeroes([jx][jy][jp][jz]f32),
    surfb: comptime [jx][jy][jp][jc][jz][4]f32 = std.mem.zeroes([jx][jy][jp][jc][jz][4]f32),
    tcc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    tcg: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    tkc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    arstk: comptime [jx][jy][jp][jc][jz]f32 = std.mem.zeroes([jx][jy][jp][jc][jz]f32),
    tkg: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dtkc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cfopc: comptime [jx][jy][jp][4][6]f32 = std.mem.zeroes([jx][jy][jp][4][6]f32),
    chill: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    dmvl: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    rrad1x: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    rrad2x: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    rtar1x: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    rtar2x: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    flwc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    volwc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    pardif: comptime [jx][jy][jp][jz][4][4]f32 = std.mem.zeroes([jx][jy][jp][jz][4][4]f32),
    par: comptime [jx][jy][jp][jz][4][4]f32 = std.mem.zeroes([jx][jy][jp][jz][4][4]f32),
    radc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    radp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    fradp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    surf: comptime [jx][jy][jp][jc][25][jz][4]f32 = std.mem.zeroes([jx][jy][jp][jc][25][jz][4]f32),
    surfx: comptime [jx][jy][jp][jc][25][jz][4]f32 = std.mem.zeroes([jx][jy][jp][jc][25][jz][4]f32),
    vcgro: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    vgro: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    compl: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    etgro: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    cbxn: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    fmol: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cpool3: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    co2b: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    vcgr4: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    vgro4: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    etgr4: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    cbxn4: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    cpool4: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    hcob: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    arlfp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    arstp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    arlfs: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    zc: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    fdbk: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    fdbk4: comptime [jx][jy][jp][jc][25]f32 = std.mem.zeroes([jx][jy][jp][jc][25]f32),
    fdbkx: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),

    pub fn init() Blk1g {
        return .{};
    }
};
