const std = @import("std");

pub const Blk18a = struct {
    arlfc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    arstc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tevapp: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tevapc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tengyc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    thflxc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tupwtr: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    tupht: comptime [jx][jy][jz + 1]f32 = std.mem.zeroes([jx][jy][jz + 1]f32),
    tvolwp: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tcofla: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    toxfla: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tchfla: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tn2fla: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tnhfla: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tlco2p: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    gpp: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tloxy: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tlch4p: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tln2op: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    reco: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tlnh3p: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tco2s: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupoxs: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupchs: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupn2s: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupn3s: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupnh4: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupno3: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tuph2p: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupn3b: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupnhb: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupnob: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tuph2b: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupnf: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    csnt: comptime [jx][jy][jz + 1][2][4]f32 = std.mem.zeroes([jx][jy][jz + 1][2][4]f32),
    zsnt: comptime [jx][jy][jz + 1][2][4]f32 = std.mem.zeroes([jx][jy][jz + 1][2][4]f32),
    psnt: comptime [jx][jy][jz + 1][2][4]f32 = std.mem.zeroes([jx][jy][jz + 1][2][4]f32),
    tdfomc: comptime [jx][jy][jz][5]f32 = std.mem.zeroes([jx][jy][jz][5]f32),
    tdfomn: comptime [jx][jy][jz][5]f32 = std.mem.zeroes([jx][jy][jz][5]f32),
    tdfomp: comptime [jx][jy][jz][5]f32 = std.mem.zeroes([jx][jy][jz][5]f32),
    tco2z: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    toxyz: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tch4z: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tn2oz: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tnh3z: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tco2p: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tupoxp: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    thrmc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tcnet: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    zcsnc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    zzsnc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    zpsnc: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    wglft: comptime [jx][jy][jc]f32 = std.mem.zeroes([jx][jy][jc]f32),
    arlft: comptime [jx][jy][jc]f32 = std.mem.zeroes([jx][jy][jc]f32),
    arstt: comptime [jx][jy][jc]f32 = std.mem.zeroes([jx][jy][jc]f32),
    arlss: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    rtdnt: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tccan: comptime [jx][jy]f32 = std.mem.zeroes([jx][jy]f32),
    tuph1p: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),
    tuph1b: comptime [jx][jy][jz]f32 = std.mem.zeroes([jx][jy][jz]f32),

    pub fn init() Blk18a {
        return .{};
    }
};
