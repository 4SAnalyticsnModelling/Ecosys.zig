const std = @import("std");

pub const Blk9b = struct {
    offst: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    rrad1m: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    rrad2m: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    tcz: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    port: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    pr: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    rsrr: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    rsra: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    ptsht: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    upmxzh: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upkmzh: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upmnzh: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upmxzo: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upkmzo: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upmnzo: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upmxpo: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upkmpo: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    upmnpo: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    rradp: comptime [jx][jy][jp][2]f32 = std.mem.zeroes([jx][jy][jp][2]f32),
    cnrts: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cprts: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    albr: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    albp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    taur: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    taup: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    absr: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    absp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    tcx: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    ztypi: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    tczd: comptime f32 = 0,
    tcxd: comptime f32 = 0,
    ztyp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    ictyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    igtyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    istyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    idtyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    nnod: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    intyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    iwtyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    iptyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    ibtyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    irtyp: comptime [jx][jy][jp]i32 = std.mem.zeroes([jx][jy][jp]i32),
    my: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),

    pub fn init() Blk9b {
        return .{};
    }
};
