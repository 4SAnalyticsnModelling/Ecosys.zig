const std = @import("std");

pub const Blk1cp = struct {
    wtsht: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wtlf: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wtshe: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wtstk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wvstk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wtrsv: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wthsk: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wtear: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wtgr: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wtls: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wvstkb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    cpool: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtlsb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtshtb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtlfb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtsheb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtstkb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtrsvb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wthskb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtearb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wtgrb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    wrtra: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wglf: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    wgshe: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    wgnode: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    htstz: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    arlf: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    htshe: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    htnode: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    arlfb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    ccplnp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    grnob: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    grnxb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    grno: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    grwtb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    arlfv: comptime [jx][jy][jp][jz]f32 = std.mem.zeroes([jx][jy][jp][jz]f32),
    wglfl: comptime [jx][jy][jp][jc][26][jz]f32 = std.mem.zeroes([jx][jy][jp][jc][26][jz]f32),
    arlfl: comptime [jx][jy][jp][jc][26][jz]f32 = std.mem.zeroes([jx][jy][jp][jc][26][jz]f32),
    wslf: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    wsshe: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    csnc: comptime [jx][jy][jp][jz][2][4]f32 = std.mem.zeroes([jx][jy][jp][jz][2][4]f32),
    cnet: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    pp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    wglfv: comptime [jx][jy][jp][jz]f32 = std.mem.zeroes([jx][jy][jp][jz]f32),
    cpoolp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    ccpolp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    ccpolb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    arstv: comptime [jx][jy][jp][jz]f32 = std.mem.zeroes([jx][jy][jp][jz]f32),
    wtstdg: comptime [jx][jy][jp][4]f32 = std.mem.zeroes([jx][jy][jp][4]f32),
    wtstg: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    cpolnb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),
    cpolnp: comptime [jx][jy][jp]f32 = std.mem.zeroes([jx][jy][jp]f32),
    htnodx: comptime [jx][jy][jp][jc][26]f32 = std.mem.zeroes([jx][jy][jp][jc][26]f32),
    wtndb: comptime [jx][jy][jp][jc]f32 = std.mem.zeroes([jx][jy][jp][jc]f32),

    pub fn init() Blk1cp {
        return .{};
    }
};
